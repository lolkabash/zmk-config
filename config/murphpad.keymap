/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>


#define TIMEOUT 300

&encoder_1 {
    status = "okay";
};

&encoder_2 {
    status = "okay";
};

/ {
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1 &encoder_2>;
    };

    keymap0: keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default layer";
            bindings = <
                &bt BT_CLR          &ext_power EP_TOG  &out OUT_TOG    &kp LC(PG_DN)     &kp LC(PG_UP)  
                &rgb_ug RGB_TOG     &kp KP_NUM         &kp KP_DIVIDE   &kp KP_MULTIPLY   &kp KP_MINUS    
                &rgb_ug RGB_EFF     &kp KP_N7          &kp KP_N8       &kp KP_N9         &kp KP_PLUS   
                &kp C_MUTE          &kp KP_N4          &kp KP_N5       &kp KP_N6         &trans  
                &mo 1               &kp KP_N1          &kp KP_N2       &kp KP_N3         &kp KP_ENTER    
                &kp C_AL_CALC       &kp KP_N0          &trans          &kp KP_DOT        &trans  
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_PREV C_NEXT>;

        }; 
        
        fn_layer {
            label = "fn layer";
            bindings = <
                &trans      &trans          &trans             &trans          &trans 
                &trans      &trans          &trans             &trans          &trans     
                &trans      &rgb_ug RGB_SPD &rgb_ug RGB_EFF    &rgb_ug RGB_SPI &trans     
                &kp C_PP    &rgb_ug RGB_BRD &rgb_ug RGB_TOG    &rgb_ug RGB_BRI &trans     
                &trans      &bt BT_SEL 0    &bt BT_SEL 1       &bt BT_SEL 2    &trans     
                &trans      &bt BT_CLR      &trans             &trans          &trans     
            >;  
            sensor-bindings = <&inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_VOL_UP C_VOL_DN>;
           
        };
    };
};
